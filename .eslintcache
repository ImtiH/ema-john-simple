[{"C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\index.js":"1","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\App.js":"2","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\reportWebVitals.js":"3","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\Header\\Header.js":"4","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\Shop\\Shop.js":"5","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\fakeData\\index.js":"6","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\fakeData\\android.js":"7","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\fakeData\\camera.js":"8","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\fakeData\\laptop.js":"9","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\Product\\Product.js":"10","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\Cart\\Cart.js":"11","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\Review\\Review.js":"12","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\Inventory\\Inventory.js":"13","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\NotFound\\NotFound.js":"14","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\ProductDetail\\ProductDetail.js":"15","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\utilities\\databaseManager.js":"16","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\ReviewItem\\ReviewItem.js":"17","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\Login\\Login.js":"18","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\Shipment\\Shipment.js":"19","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\Login\\firebase.config.js":"20","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\PrivateRoute\\PrivateRoute.js":"21","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\Login\\loginManager.js":"22"},{"size":543,"mtime":1608834564162,"results":"23","hashOfConfig":"24"},{"size":2088,"mtime":1609685170084,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":758,"mtime":1609759024500,"results":"27","hashOfConfig":"24"},{"size":3149,"mtime":1609147520043,"results":"28","hashOfConfig":"24"},{"size":362,"mtime":1583014415000,"results":"29","hashOfConfig":"24"},{"size":19555,"mtime":1583014415000,"results":"30","hashOfConfig":"24"},{"size":17767,"mtime":1583014415000,"results":"31","hashOfConfig":"24"},{"size":21341,"mtime":1583014415000,"results":"32","hashOfConfig":"24"},{"size":1312,"mtime":1609044869709,"results":"33","hashOfConfig":"24"},{"size":1844,"mtime":1609337259703,"results":"34","hashOfConfig":"24"},{"size":3054,"mtime":1609655643858,"results":"35","hashOfConfig":"24"},{"size":190,"mtime":1608968260574,"results":"36","hashOfConfig":"24"},{"size":222,"mtime":1608979335462,"results":"37","hashOfConfig":"24"},{"size":668,"mtime":1609046390766,"results":"38","hashOfConfig":"24"},{"size":1693,"mtime":1583014415000,"results":"39","hashOfConfig":"24"},{"size":760,"mtime":1609122689315,"results":"40","hashOfConfig":"24"},{"size":4493,"mtime":1610110223003,"results":"41","hashOfConfig":"24"},{"size":1664,"mtime":1609766916582,"results":"42","hashOfConfig":"24"},{"size":475,"mtime":1609660191589,"results":"43","hashOfConfig":"24"},{"size":775,"mtime":1609680962667,"results":"44","hashOfConfig":"24"},{"size":4121,"mtime":1610109601892,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"ymuw66",{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"48"},"C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\index.js",[],["101","102"],"C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\App.js",["103","104"],"import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Shop from './components/Shop/Shop';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Review from './components/Review/Review';\nimport Inventory from './components/Inventory/Inventory';\nimport NotFound from './components/NotFound/NotFound';\nimport ProductDetail from './components/ProductDetail/ProductDetail';\nimport Login from './components/Login/Login';\nimport Shipment from './components/Shipment/Shipment';\nimport { createContext, useState } from 'react';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\n\nexport const userContext  = createContext();\n\nfunction App() {\n  \n  const [loggedInUser,setLoggedInUser] = useState({});//a state for logged in user - whether the user is logged in or not\n  return (\n    <userContext.Provider value={[loggedInUser, setLoggedInUser]}>\n        {/* <Header></Header>\n        <Shop></Shop> */}\n\n      \n      <Router>\n      <Header></Header>\n        <Switch>\n            <Route path=\"/shop\">\n                <Shop></Shop>\n            </Route>\n            <Route path=\"/review\">\n                <Review></Review>\n            </Route>\n            <PrivateRoute path=\"/inventory\">\n              <Inventory></Inventory>\n            </PrivateRoute>\n            <Route path=\"/login\">\n              <Login></Login>\n            </Route>\n            <PrivateRoute path=\"/shipment\">\n              <Shipment></Shipment>\n            </PrivateRoute>\n            <Route exact path=\"/\">\n              {/* when there will be no path, it will take to the shop page */}\n                <Shop></Shop>\n            </Route>\n            <Route path=\"/product/:productKey\"> \n            {/* /:something  --> will work on the dynamic value like key */}\n                <ProductDetail></ProductDetail>\n            </Route>\n            <Route path=\"*\">\n              <NotFound></NotFound>\n            </Route>\n        </Switch>\n      </Router>\n    \n    </userContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\reportWebVitals.js",[],"C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\Header\\Header.js",["105"],"import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { userContext } from '../../App';\r\nimport logo from '../../images/logo.png'\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(userContext);\r\n    return (\r\n        <div className=\"header\">\r\n            {/* <h1>This is header.</h1> */}\r\n            <img src={logo} alt=\"\"/>\r\n            <nav>\r\n                <Link to=\"/shop\">Shop</Link>\r\n                <Link to=\"/review\">Order Review</Link>\r\n                <Link to=\"/inventory\">Manage Inventory</Link>\r\n                <button onClick ={() => setLoggedInUser({})}>Sign Out</button>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\Shop\\Shop.js",["106"],"import React from 'react';\r\nimport fakeData from '../../fakeData';\r\nimport {useState,useEffect} from 'react';\r\nimport './Shop.css';\r\nimport Product from '../Product/Product';\r\nimport Cart from '../Cart/Cart';\r\nimport { addToDatabaseCart, getDatabaseCart } from '../../utilities/databaseManager';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Shop = () => {\r\n    // console.log(fakeData);\r\n    const first10 = fakeData.slice(0,10);\r\n    const [products, setProducts] =  useState(first10); \r\n    const [cart,setCart] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const savedCart = getDatabaseCart();\r\n        const productKeys = Object.keys(savedCart);\r\n        const previousCart = productKeys.map( existingKey => {\r\n            const product = fakeData.find( pd => pd.key === existingKey);\r\n            product.quantity = savedCart[existingKey];\r\n            return product;\r\n        } )\r\n        setCart(previousCart);\r\n    }, [])\r\n\r\n    const handleAddProduct = (product) =>{\r\n         // console.log('Product Added', product);\r\n        const toBeAddedKey = product.key;\r\n        const sameProduct = cart.find(pd => pd.key === toBeAddedKey);\r\n        let count = 1;\r\n        let newCart;\r\n        if(sameProduct){\r\n            count = sameProduct.quantity + 1;\r\n            sameProduct.quantity = count;\r\n            const others = cart.filter(pd => pd.key !== toBeAddedKey);\r\n            newCart = [...others, sameProduct];\r\n        }\r\n        else{\r\n            product.quantity = 1;\r\n            newCart = [...cart, product];\r\n        }\r\n        setCart(newCart);\r\n        addToDatabaseCart(product.key, count); // to see total number of the same product added to the cart \r\n    }\r\n\r\n\r\n\r\n    \r\n    return (\r\n        <div className=\"twin-container\">\r\n            {/* <h1>This is Shop!</h1> */}\r\n            {/* <h3>{products.length}</h3> */}\r\n            <div className=\"product-container\">\r\n                {/* <ul>\r\n                    {\r\n                        \r\n                        products.map(product => <li>{product.name}</li>) \r\n                    }\r\n                </ul> */}\r\n                {\r\n                    products.map(pd => <Product \r\n                        product={pd} \r\n                        handleAddProduct = {handleAddProduct} \r\n                        showAddToCart={true} \r\n                        key = {pd.key}\r\n                        ></Product>) \r\n                }\r\n\r\n\r\n\r\n            </div>\r\n            <div className=\"cart-container\">\r\n                    {/* <h3>This is cart</h3> */}\r\n                    {/* <h5>Order Summary: {cart.length}</h5> */}\r\n                    <Cart cart={cart}>\r\n                        <Link to=\"/review\">\r\n                            <button className=\"cart-button\">Review Order</button> \r\n                            {/* this button is a children of Cart component and is accessed from Cart.js file \r\n                            we make this children here so that this button will be shown only on shop page */}\r\n                        </Link>\r\n                    </Cart>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Shop;","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\fakeData\\index.js",[],"C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\fakeData\\android.js",[],"C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\fakeData\\camera.js",[],"C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\fakeData\\laptop.js",[],"C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\Product\\Product.js",["107"],"import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoffee,faShoppingCart } from '@fortawesome/free-solid-svg-icons'\r\nimport \"./product.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Product = (props) => {\r\n  // console.log(props.product);\r\n  // console.log(props);\r\n  const { img, name, seller, price, stock,key } = props.product;\r\n  return (\r\n    <div className=\"product\">\r\n      <div>\r\n        {/* <img src={props.product.img} alt=\"\"/> */}\r\n        <img src={img} alt=\"\" />\r\n      </div>\r\n\r\n      <div className=\"product-description\">\r\n        {/* <h4>{props.product.name} </h4>  */}\r\n        <h4 className=\"product-name\"><Link to={\"/product/\"+key}>{name}</Link></h4>\r\n        {/* {\"/\"+key} will make the name clickable and will generate key in the url once clicked.  */}\r\n        {/* <br/> */}\r\n        <p> <small>by: {seller}</small> </p>\r\n        <h4>Price: ${price}</h4>\r\n        \r\n        <p> <small>Only {stock} left in stock - order now!</small> </p>\r\n\r\n        {props.showAddToCart === true &&  <button className=\"cart-button\" onClick={() => props.handleAddProduct(props.product)}>       \r\n          <FontAwesomeIcon icon={faShoppingCart} /> Add to cart\r\n        </button>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\Cart\\Cart.js",["108"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Cart = (props) => {\r\n    const cart = props.cart;\r\n    // const total = cart.reduce((total,pd) => total + pd.price, 0);\r\n    //The above statement of total with reduce function can be written as following \r\n    let total = 0;\r\n    for (let i = 0; i < cart.length;i++){\r\n        const product = cart[i];\r\n        total = total + product.price * product.quantity; \r\n        // debugger;\r\n    }\r\n\r\n\r\n    let shipping = 0;\r\n    if (total > 35){\r\n        shipping = 0;\r\n    }\r\n    else if(total > 15){\r\n        shipping = 4.99;\r\n    }\r\n    else if(total > 0){\r\n        shipping = 12.99;\r\n    }\r\n   \r\n\r\n    // const tax = (total / 10).toFixed(2);\r\n    const tax = (total / 10);\r\n    const grandTotal = (total + shipping + Number(tax)).toFixed(2); //when we use toFixed() it converts \r\n    //the number into a string, that's why we are using Number() here to convert it back to number again\r\n    \r\n    const formatNumber = num => {\r\n        const precision = num.toFixed(2);\r\n        return Number(precision);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h4 className =\"text-danger\">Order Summary!</h4>\r\n            <p>Items ordered: {cart.length}</p>\r\n            {/* <p>Product price: {total.toFixed(2)}</p> */}\r\n            <p>Product price: {formatNumber(total)}</p>\r\n            <p><small>Shipping: {shipping} </small></p>\r\n            <p><small>Tax: {formatNumber(tax)} </small></p>\r\n            <p>Total Price: {grandTotal}</p>\r\n            {/* <Link to=\"/review\">\r\n            <button className=\"cart-button\">Review Order</button>\r\n            </Link> */}\r\n            {\r\n                props.children \r\n                //This children of the Cart component are placed here.\r\n            }\r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\Review\\Review.js",["109","110","111"],"import React, { useEffect, useState } from 'react';\r\nimport fakeData from '../../fakeData';\r\nimport { getDatabaseCart, processOrder, removeFromDatabaseCart } from '../../utilities/databaseManager';\r\nimport Cart from '../Cart/Cart';\r\nimport ReviewItem from '../ReviewItem/ReviewItem';\r\nimport happyImage from '../../images/giphy.gif'; // first ../ bring it out of the Review folder and second ../ brings it out of the components folder\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Review = () => {\r\n    const [cart, setCart] = useState([]); //[] means empty array, means initially cart value will be 0.\r\n    const [orderPlaced, setOrderPlaced] = useState(false); //the value of orderPlaced is  false now. When the value will change to true, we will assign setOrderPlaced = true\r\n    const history = useHistory();\r\n\r\n    const handleProceedCheckout = () => {\r\n        // console.log(\"Order placed\");\r\n\r\n        //setCart([]); //Making the cart empty because this existing products in the cart will be bought(processed)\r\n        //setOrderPlaced(true);\r\n        //processOrder();\r\n\r\n        history.push('/shipment');\r\n    }\r\n\r\n    const removeProduct = (productKey) => {\r\n        // console.log(\"Product removed \", productKey);\r\n        const newCart = cart.filter(pd => pd.key != productKey); //filters the product to show the ones which keys are not the same as the one removed(productKey)\r\n        setCart(newCart); //updating the existing cart after filtering \r\n        removeFromDatabaseCart(productKey); //to remove the product from the local storage as well so the remove product don't reappear when page is refreshed\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const savedCart = getDatabaseCart();\r\n        const productKeys = Object.keys(savedCart);\r\n        // const counts = productKeys.map(key => savedCart[key]);\r\n        const cartProducts = productKeys.map(key => {\r\n            const product = fakeData.find(pd => pd.key === key);\r\n            product.quantity = savedCart[key];\r\n            return product;\r\n\r\n        });\r\n        setCart(cartProducts);\r\n\r\n    },[])\r\n\r\n    let thankyou;\r\n    if(orderPlaced) {\r\n        thankyou = <img src={happyImage} alt=\"\"/>\r\n    }\r\n    \r\n    return (\r\n        <div className=\"twin-container\">\r\n            {/* <h1>Cart Items: {cart.length}</h1> */}\r\n            <div className=\"product-container\">\r\n            {\r\n                cart.map(pd => <ReviewItem \r\n                    product={pd} \r\n                    key={pd.key}\r\n                    removeProduct = {removeProduct}\r\n                    ></ReviewItem> )\r\n            }\r\n            {thankyou}\r\n\r\n            </div>\r\n            <div className = \"cart-container\">\r\n                <Cart cart={cart}>\r\n                    {/* <button className=\"cart-button\" onClick = {placeOrderHandler}>Place Order</button> */}\r\n                    <button className=\"cart-button\" onClick = {handleProceedCheckout}>Proceed checkout</button>\r\n                </Cart>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Review;","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\Inventory\\Inventory.js",[],"C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\NotFound\\NotFound.js",[],"C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\ProductDetail\\ProductDetail.js",[],"C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\utilities\\databaseManager.js",[],"C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\ReviewItem\\ReviewItem.js",[],"C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\Login\\Login.js",["112"],"import React, { useContext, useState } from 'react';\r\nimport { userContext } from '../../App';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { createUserWithEmailAndPassword, handleFbSignIn, handleGoogleSignIn, handleSignOut, initializeLoginFramework, resetPassword, signInWithEmailAndPassword } from './loginManager';\r\n\r\n\r\nfunction Login() {\r\n  const [newUser, setNewUser] = useState(false);\r\n  const [user, setUser] = useState({\r\n    isSignedIn: false,\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    photo: ''\r\n  })\r\n\r\n  initializeLoginFramework();\r\n\r\n  const [loggedInUser, setLoggedInUser] = useContext(userContext);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n  const GoogleSignIn = () => {\r\n      handleGoogleSignIn()\r\n      .then(res => {\r\n        //   setUser(res);\r\n        //   setLoggedInUser(res);\r\n        //   history.replace(from); //to take you to the shipment page after successfully signed in\r\n        handleResponse(res, true);\r\n     \r\n      })\r\n }\r\n\r\n  const FbSignIn = () => {\r\n    handleFbSignIn()\r\n    .then(res => {\r\n    //   setUser(res);\r\n    //   setLoggedInUser(res);\r\n    //   history.replace(from);\r\n        handleResponse(res,true);\r\n     })\r\n    }\r\n\r\n  const signOut = () => {\r\n      handleSignOut()\r\n      .then(res => {\r\n        //   setUser(res);\r\n        //   setLoggedInUser(res);\r\n        handleResponse(res,false);\r\n      })\r\n  }\r\n\r\n  const handleResponse = (res,redirect) => {\r\n      //creating this function for these 3 repeating statements\r\n    setUser(res);\r\n    setLoggedInUser(res);\r\n    if(redirect){\r\n        history.replace(from);\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  const handleBlur = (e) => {\r\n    let isFieldValid = true;\r\n    if(e.target.name === 'email'){\r\n      isFieldValid = /\\S+@\\S+\\.\\S+/.test(e.target.value);\r\n    }\r\n    if(e.target.name === 'password'){\r\n      const isPasswordValid = e.target.value.length > 6;\r\n      const passwordHasNumber =  /\\d{1}/.test(e.target.value);\r\n      isFieldValid = isPasswordValid && passwordHasNumber;\r\n    }\r\n    if(isFieldValid){\r\n      const newUserInfo = {...user};\r\n      newUserInfo[e.target.name] = e.target.value;\r\n      setUser(newUserInfo);\r\n    }\r\n  }\r\n  const handleSubmit = (e) => {\r\n    if(newUser && user.email && user.password){\r\n      createUserWithEmailAndPassword(user.name, user.email,user.password)\r\n      .then(res => {\r\n        // setUser(res);\r\n        // setLoggedInUser(res);\r\n        // history.replace(from);\r\n        handleResponse(res, true);\r\n      })\r\n    }\r\n\r\n    if(!newUser && user.email && user.password){\r\n      signInWithEmailAndPassword(user.email,user.password)\r\n      .then(res => {\r\n        // setUser(res);\r\n        // setLoggedInUser(res);\r\n        // history.replace(from);\r\n        handleResponse(res, true);\r\n      })\r\n    }\r\n\r\n    e.preventDefault();\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div style={{textAlign: 'center' }}>\r\n      {/* { user.isSignedIn ? <button onClick={handleSignOut}>Sign Out</button> : */}\r\n      { user.isSignedIn ? <button onClick={signOut}>Sign Out</button> :\r\n        // <button onClick={handleGoogleSignIn}>Sign In</button>\r\n        <button onClick={GoogleSignIn}>Sign In</button>\r\n      }\r\n      <br/>\r\n      <button onClick={FbSignIn}>Sign in using Facebook</button>\r\n      {\r\n        user.isSignedIn && <div>\r\n          <p>Welcome, {user.name}!</p>\r\n          <p>Your email: {user.email}</p>\r\n          <img src={user.photo} alt=\"\"/>\r\n        </div>\r\n      }\r\n\r\n      <h1>Our own Authentication</h1>\r\n      <input type=\"checkbox\" onChange={() => setNewUser(!newUser)} name=\"newUser\" id=\"\"/>\r\n      <label htmlFor=\"newUser\">New User Sign up</label>\r\n      <form onSubmit={handleSubmit}>\r\n        {newUser && <input name=\"name\" type=\"text\" onBlur={handleBlur} placeholder=\"Your name\"/>}\r\n        <br/>\r\n        <input type=\"text\" name=\"email\" onBlur={handleBlur} placeholder=\"Your Email address\" required/>\r\n        <br/>\r\n        <input type=\"password\" name=\"password\" onBlur={handleBlur} placeholder=\"Your Password\" required/>\r\n        <br/>\r\n        <input type=\"submit\" value={newUser ? 'Sign up' : 'Sign in'}/> \r\n      </form>\r\n      <button onClick = {() => resetPassword(user.email)}>Reset Pasword</button>\r\n      <p style={{color: 'red'}}>{user.error}</p>\r\n      { user.success && <p style={{color: 'green'}}>User { newUser ? 'created' : 'Logged In'} successfully</p>}\r\n    </div>\r\n  );\r\n}\r\nexport default Login;","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\Shipment\\Shipment.js",["113"],"import React, { useContext } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { userContext } from '../../App';\r\nimport './shipment.css';\r\n\r\n\r\n//using react hook form: https://react-hook-form.com/get-started\r\nconst Shipment = () => {\r\n    \r\n    const { register, watch, handleSubmit, errors } = useForm();\r\n    const onSubmit = data => console.log(data);\r\n    console.log(watch(\"example\")); // watch input value by passing the name of it\r\n    const [loggedInUser, setLoggedInUser] = useContext(userContext) // we have to use the logged in users data from the context, so that the user doesn't have to provide all of his details on the shipment page \r\n\r\n    return (\r\n        <form className = \"ship-form\" onSubmit={handleSubmit(onSubmit)} action=\"\">\r\n \r\n            <input name=\"name\"  defaultValue={loggedInUser.name} ref={register({ required: true })} placeholder =\" Your name\"/>\r\n            {errors.name && <span className=\"error\">Name is required</span>}\r\n\r\n            <input name=\"email\" defaultValue={loggedInUser.email} ref={register({ required: true })} placeholder =\"Your email \" />\r\n            {errors.email && <span className=\"error\">Email is required</span>}\r\n\r\n            <input name=\"address\" ref={register({ required: true })} placeholder =\"Your addess \"/>\r\n            {errors.address && <span className=\"error\">Address is required</span>}\r\n\r\n            <input name=\"phone\" ref={register({ required: true })} placeholder =\"Your phone number\"/>\r\n            {errors.phone && <span className=\"error\">Phone number is required</span>}\r\n\r\n            <input type=\"submit\" />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Shipment;","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\Login\\firebase.config.js",[],"C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\PrivateRoute\\PrivateRoute.js",["114"],"import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { userContext } from '../../App';\r\n\r\n\r\n// https://reactrouter.com/web/example/auth-workflow\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(userContext);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                loggedInUser.email ? (\r\n                children\r\n                ) : (\r\n                <Redirect\r\n                    to={{\r\n                    pathname: \"/login\",\r\n                    state: { from: location }\r\n                    }}\r\n                />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","C:\\WebDevelopment\\ReactProject\\ema-john-simple\\src\\components\\Login\\loginManager.js",["115","116"],"import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config'\r\n\r\n\r\nexport const initializeLoginFramework = () => {\r\n    if(firebase.apps.length === 0) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const handleGoogleSignIn = () => {\r\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n    return firebase.auth().signInWithPopup(googleProvider)\r\n    .then(res => {\r\n      const {displayName, photoURL, email} = res.user;\r\n      const signedInUser = {\r\n        isSignedIn: true,\r\n        name: displayName,\r\n        email: email,\r\n        photo: photoURL,\r\n        success: true\r\n      };\r\n    //   setUser(signedInUser);\r\n      return signedInUser;\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      console.log(err.message);\r\n    })\r\n}\r\n\r\nexport const handleFbSignIn = () => {\r\n    const fbProvider = new firebase.auth.FacebookAuthProvider();\r\n    return firebase.auth().signInWithPopup(fbProvider).then(function(result) {\r\n      var token = result.credential.accessToken;\r\n      var user = result.user;\r\n      user.success = true;\r\n      return user;\r\n      console.log('fb user after sign in', user);\r\n    }).catch(function(error) {\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      console.log(errorCode, errorMessage)\r\n    });\r\n}\r\n\r\n\r\nexport const handleSignOut = () => {\r\n    // firebase.auth().signOut()\r\n    return firebase.auth().signOut()\r\n    .then(res => {\r\n      const signedOutUser = {\r\n        isSignedIn: false,\r\n        name: '',\r\n        email: '',\r\n        photo: '',\r\n        error: '',\r\n        success: false\r\n      }\r\n    //   setUser(signedOutUser);\r\n      return signedOutUser;\r\n    }).catch(err => {\r\n      // An error happened.\r\n    });\r\n}\r\n\r\n\r\nexport const createUserWithEmailAndPassword = (name,email,password) => {\r\n\r\n    return firebase.auth().createUserWithEmailAndPassword(email, password)\r\n    .then( res => {\r\n        // const newUserInfo = {...user};\r\n        const newUserInfo = res.user;\r\n        // const newUserInfo = {...user};\r\n        newUserInfo.error = '';\r\n        newUserInfo.success = true;\r\n        // setUser(newUserInfo);\r\n        updateUserName(name);\r\n        verifyEmail();\r\n        return newUserInfo;\r\n    })\r\n    .catch( error => {\r\n        // const newUserInfo = {...user};\r\n        const newUserInfo = {};\r\n        newUserInfo.error = error.message;\r\n        newUserInfo.success = false;\r\n        // setUser(newUserInfo);\r\n        return newUserInfo;\r\n    });\r\n}\r\n\r\nexport const signInWithEmailAndPassword = (email,password) => {\r\n     return firebase.auth().signInWithEmailAndPassword(email, password)\r\n    .then(res => {\r\n        const newUserInfo = res.user;\r\n        newUserInfo.error = '';\r\n        newUserInfo.success = true;    \r\n        // setUser(newUserInfo);\r\n        // setLoggedInUser(newUserInfo);\r\n        // history.replace(from);\r\n        // console.log('sign in user info', res.user);\r\n        return newUserInfo;\r\n    })\r\n    .catch(function(error) {\r\n        const newUserInfo = {};\r\n        newUserInfo.error = error.message;\r\n        newUserInfo.success = false;\r\n        // setUser(newUserInfo);\r\n        return newUserInfo;\r\n    });\r\n\r\n}\r\n\r\nconst updateUserName = name =>{\r\n    //this updateUserName funtion is being used here in this file by createUserWithEmailAndPassword function. So, we don't have to export it. \r\n    const user = firebase.auth().currentUser;\r\n\r\n    user.updateProfile({\r\n      displayName: name\r\n    }).then(function() {\r\n      console.log('user name updated successfully')\r\n    }).catch(function(error) {\r\n      console.log(error)\r\n    });\r\n}\r\n\r\nconst verifyEmail = () => {\r\n\r\n  var user = firebase.auth().currentUser;\r\n\r\n  user.sendEmailVerification().then(function() {\r\n    // Email sent.\r\n  }).catch(function(error) {\r\n    // An error happened.\r\n  });\r\n\r\n}\r\n\r\nexport const resetPassword = (email) => {\r\n  var auth = firebase.auth();\r\n\r\n  auth.sendPasswordResetEmail(email).then(function() {\r\n    // Email sent.\r\n  }).catch(function(error) {\r\n    // An error happened.\r\n  });\r\n}",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":1,"column":8,"nodeType":"123","messageId":"124","endLine":1,"endColumn":12},{"ruleId":"121","severity":1,"message":"125","line":9,"column":3,"nodeType":"123","messageId":"124","endLine":9,"endColumn":7},{"ruleId":"121","severity":1,"message":"126","line":8,"column":12,"nodeType":"123","messageId":"124","endLine":8,"endColumn":24},{"ruleId":"121","severity":1,"message":"127","line":13,"column":22,"nodeType":"123","messageId":"124","endLine":13,"endColumn":33},{"ruleId":"121","severity":1,"message":"128","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":18},{"ruleId":"121","severity":1,"message":"125","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":14},{"ruleId":"121","severity":1,"message":"129","line":3,"column":27,"nodeType":"123","messageId":"124","endLine":3,"endColumn":39},{"ruleId":"121","severity":1,"message":"130","line":12,"column":25,"nodeType":"123","messageId":"124","endLine":12,"endColumn":39},{"ruleId":"131","severity":1,"message":"132","line":27,"column":50,"nodeType":"133","messageId":"134","endLine":27,"endColumn":52},{"ruleId":"121","severity":1,"message":"126","line":19,"column":10,"nodeType":"123","messageId":"124","endLine":19,"endColumn":22},{"ruleId":"121","severity":1,"message":"135","line":13,"column":26,"nodeType":"123","messageId":"124","endLine":13,"endColumn":41},{"ruleId":"121","severity":1,"message":"135","line":8,"column":26,"nodeType":"123","messageId":"124","endLine":8,"endColumn":41},{"ruleId":"121","severity":1,"message":"136","line":38,"column":11,"nodeType":"123","messageId":"124","endLine":38,"endColumn":16},{"ruleId":"137","severity":1,"message":"138","line":42,"column":7,"nodeType":"139","messageId":"140","endLine":42,"endColumn":50},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'loggedInUser' is assigned a value but never used.","'setProducts' is assigned a value but never used.","'faCoffee' is defined but never used.","'processOrder' is defined but never used.","'setOrderPlaced' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setLoggedInUser' is assigned a value but never used.","'token' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-global-assign","no-unsafe-negation"]